name: CI


on: [push, pull_request]


jobs:
  dynamic_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          pip install -r requirements.txt

      - name: Install external packages used for dynamic tests
        run: |
          pip install -r tests/requirements_for_software_tests.txt

      - name: Execute unit tests with coverage report [pytest]
        run: |
          pytest --cov-report term-missing --cov-fail-under=100 --cov=uds tests/software_tests -m "not integration"

      - name: Execute integration tests with coverage report [pytest]
        run: |
          pytest --cov-report=xml --cov-fail-under=50 --cov=uds tests/software_tests -m "integration"

      - name: Upload integration tests coverage report [CodeCov]
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}


  static_code_analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          pip install -r requirements.txt

      - name: Install external packages used for static tests
        run: |
          pip install -r tests/requirements_for_static_code_analysis.txt

      - name: Execute static code analysis [prospector]
        run: |
          prospector --profile tests/prospector_profile.yaml uds

      - name: Execute static code analysis [pyroma]
        run: |
          pyroma -a .


  dependency_checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          pip install -r requirements.txt

      - name: Install external packages used for dependency scanning
        run: |
          pip install -r tests/requirements_for_dependency_scanning.txt

      - name: Execute dependency scanning [safety]
        run: |
          safety check --full-report
