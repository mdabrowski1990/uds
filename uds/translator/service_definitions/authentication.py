"""Translation for Authentication (SID 0x29) service."""

__all__ = ["AUTHENTICATION"]

from uds.message import RequestSID

from ..data_record import ConditionalMappingDataRecord
from ..data_record_definitions import (
    ADDITIONAL_PARAMETER_LENGTH,
    ALGORITHM_INDICATOR,
    AUTHENTICATION_RETURN_PARAMETER,
    AUTHENTICATION_SUB_FUNCTION,
    CERTIFICATE_CLIENT_LENGTH,
    CERTIFICATE_DATA_LENGTH,
    CERTIFICATE_EVALUATION,
    CERTIFICATE_SERVER_LENGTH,
    CHALLENGE_CLIENT_LENGTH,
    CHALLENGE_SERVER_LENGTH,
    COMMUNICATION_CONFIGURATION,
    CONDITIONAL_CERTIFICATE_CLIENT,
    CONDITIONAL_CERTIFICATE_DATA,
    CONDITIONAL_CERTIFICATE_SERVER,
    CONDITIONAL_CHALLENGE_CLIENT,
    CONDITIONAL_CHALLENGE_SERVER,
    CONDITIONAL_OPTIONAL_ADDITIONAL_PARAMETER,
    CONDITIONAL_OPTIONAL_CHALLENGE_CLIENT,
    CONDITIONAL_OPTIONAL_EPHEMERAL_PUBLIC_KEY_CLIENT,
    CONDITIONAL_OPTIONAL_EPHEMERAL_PUBLIC_KEY_SERVER,
    CONDITIONAL_OPTIONAL_NEEDED_ADDITIONAL_PARAMETER,
    CONDITIONAL_OPTIONAL_SESSION_KEY_INFO,
    CONDITIONAL_PROOF_OF_OWNERSHIP_CLIENT,
    CONDITIONAL_PROOF_OF_OWNERSHIP_SERVER,
    EPHEMERAL_PUBLIC_KEY_CLIENT_LENGTH,
    EPHEMERAL_PUBLIC_KEY_SERVER_LENGTH,
    NEEDED_ADDITIONAL_PARAMETER_LENGTH,
    PROOF_OF_OWNERSHIP_CLIENT_LENGTH,
    PROOF_OF_OWNERSHIP_SERVER_LENGTH,
    SESSION_KEY_INFO_LENGTH,
)
from ..service import Service

REQUEST_CONTINUATION_MAPPING = {
    0x00: (),
    0x01: (COMMUNICATION_CONFIGURATION,
           CERTIFICATE_CLIENT_LENGTH, CONDITIONAL_CERTIFICATE_CLIENT,
           CHALLENGE_CLIENT_LENGTH, CONDITIONAL_OPTIONAL_CHALLENGE_CLIENT),
    0x02: (COMMUNICATION_CONFIGURATION,
           CERTIFICATE_CLIENT_LENGTH, CONDITIONAL_CERTIFICATE_CLIENT,
           CHALLENGE_CLIENT_LENGTH, CONDITIONAL_CHALLENGE_CLIENT),
    0x03: (PROOF_OF_OWNERSHIP_CLIENT_LENGTH, CONDITIONAL_PROOF_OF_OWNERSHIP_CLIENT,
           EPHEMERAL_PUBLIC_KEY_CLIENT_LENGTH, CONDITIONAL_OPTIONAL_EPHEMERAL_PUBLIC_KEY_CLIENT),
    0x04: (CERTIFICATE_EVALUATION,
           CERTIFICATE_DATA_LENGTH, CONDITIONAL_CERTIFICATE_DATA),
    0x05: (COMMUNICATION_CONFIGURATION, ALGORITHM_INDICATOR),
    0x06: (ALGORITHM_INDICATOR,
           PROOF_OF_OWNERSHIP_CLIENT_LENGTH, CONDITIONAL_PROOF_OF_OWNERSHIP_CLIENT,
           CHALLENGE_CLIENT_LENGTH, CONDITIONAL_OPTIONAL_CHALLENGE_CLIENT,
           ADDITIONAL_PARAMETER_LENGTH, CONDITIONAL_OPTIONAL_ADDITIONAL_PARAMETER),
    0x07: (ALGORITHM_INDICATOR,
           PROOF_OF_OWNERSHIP_CLIENT_LENGTH, CONDITIONAL_PROOF_OF_OWNERSHIP_CLIENT,
           CHALLENGE_CLIENT_LENGTH, CONDITIONAL_CHALLENGE_CLIENT,
           ADDITIONAL_PARAMETER_LENGTH, CONDITIONAL_OPTIONAL_ADDITIONAL_PARAMETER),
    0x08: (),
}
RESPONSE_CONTINUATION_MAPPING = {
    0x00: (AUTHENTICATION_RETURN_PARAMETER,),
    0x01: (AUTHENTICATION_RETURN_PARAMETER,
           CHALLENGE_SERVER_LENGTH, CONDITIONAL_CHALLENGE_SERVER,
           EPHEMERAL_PUBLIC_KEY_SERVER_LENGTH, CONDITIONAL_OPTIONAL_EPHEMERAL_PUBLIC_KEY_SERVER),
    0x02: (AUTHENTICATION_RETURN_PARAMETER,
           CHALLENGE_SERVER_LENGTH, CONDITIONAL_CHALLENGE_SERVER,
           CERTIFICATE_SERVER_LENGTH, CONDITIONAL_CERTIFICATE_SERVER,
           PROOF_OF_OWNERSHIP_SERVER_LENGTH, CONDITIONAL_PROOF_OF_OWNERSHIP_SERVER,
           EPHEMERAL_PUBLIC_KEY_SERVER_LENGTH, CONDITIONAL_OPTIONAL_EPHEMERAL_PUBLIC_KEY_SERVER),
    0x03: (AUTHENTICATION_RETURN_PARAMETER,
           SESSION_KEY_INFO_LENGTH, CONDITIONAL_OPTIONAL_SESSION_KEY_INFO),
    0x04: (AUTHENTICATION_RETURN_PARAMETER,),
    0x05: (AUTHENTICATION_RETURN_PARAMETER, ALGORITHM_INDICATOR,
           CHALLENGE_SERVER_LENGTH, CONDITIONAL_CHALLENGE_SERVER,
           NEEDED_ADDITIONAL_PARAMETER_LENGTH, CONDITIONAL_OPTIONAL_NEEDED_ADDITIONAL_PARAMETER),
    0x06: (AUTHENTICATION_RETURN_PARAMETER, ALGORITHM_INDICATOR,
           SESSION_KEY_INFO_LENGTH, CONDITIONAL_OPTIONAL_SESSION_KEY_INFO),
    0x07: (AUTHENTICATION_RETURN_PARAMETER, ALGORITHM_INDICATOR,
           PROOF_OF_OWNERSHIP_SERVER_LENGTH, PROOF_OF_OWNERSHIP_SERVER_LENGTH,
           SESSION_KEY_INFO_LENGTH, CONDITIONAL_OPTIONAL_SESSION_KEY_INFO),
    0x08: (AUTHENTICATION_RETURN_PARAMETER,),
}

CONDITIONAL_REQUEST_CONTINUATION = ConditionalMappingDataRecord(
    mapping=REQUEST_CONTINUATION_MAPPING | {key + 0x80: value
                                            for key, value in REQUEST_CONTINUATION_MAPPING.items()})
CONDITIONAL_RESPONSE_CONTINUATION = ConditionalMappingDataRecord(
    mapping=RESPONSE_CONTINUATION_MAPPING | {key + 0x80: value
                                             for key, value in RESPONSE_CONTINUATION_MAPPING.items()})

AUTHENTICATION = Service(request_sid=RequestSID.CommunicationControl,
                         request_structure=(AUTHENTICATION_SUB_FUNCTION,
                                            CONDITIONAL_REQUEST_CONTINUATION),
                         response_structure=(AUTHENTICATION_SUB_FUNCTION,
                                             CONDITIONAL_RESPONSE_CONTINUATION))
"""Default translator for :ref:`Authentication <knowledge-base-service-authentication>` service."""
