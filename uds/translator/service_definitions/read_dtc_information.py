"""Translation for ReadDTCInformation (SID 0x19) service."""

__all__ = ["READ_DTC_INFORMATION", "READ_DTC_INFORMATION_2020", "READ_DTC_INFORMATION_2013"]

from uds.message import RequestSID

from ..data_record import ConditionalMappingDataRecord
from ..data_record_definitions import (
    DTC,
    DTC_COUNT,
    DTC_EXTENDED_DATA_RECORD_NUMBER,
    DTC_FORMAT_IDENTIFIER,
    DTC_FUNCTIONAL_GROUP_IDENTIFIER,
    DTC_READINESS_GROUP_IDENTIFIER,
    DTC_SEVERITY_MASK,
    DTC_SNAPSHOT_RECORD_NUMBER,
    DTC_STATUS_AVAILABILITY_MASK,
    DTC_STATUS_MASK,
    DTC_STORED_DATA_RECORD_NUMBER,
    MEMORY_SELECTION,
    MULTIPLE_DTC_AND_FAULT_DETECTION_COUNTERS,
    MULTIPLE_DTC_AND_SEVERITY_FUNCTIONAL_UNIT_STATUS_RECORDS,
    MULTIPLE_DTC_AND_SEVERITY_STATUS_RECORDS,
    MULTIPLE_DTC_AND_SNAPSHOT_RECORD_NUMBER_RECORDS,
    MULTIPLE_DTC_AND_STATUS_RECORDS,
    OPTIONAL_DTC_AND_SEVERITY_FUNCTIONAL_UNIT_STATUS_RECORDS,
    OPTIONAL_DTC_AND_STATUS_RECORD,
    OPTIONAL_DTC_EXTENDED_DATA_RECORD_NUMBER,
    READ_DTC_INFORMATION_SUB_FUNCTION_2013,
    READ_DTC_INFORMATION_SUB_FUNCTION_2020,
    DTC_STATUS,
)
from ..service import Service

REQUEST_CONTINUATION_MAPPING_2013 = {
    0x01: (DTC_STATUS_MASK,),
    0x02: (DTC_STATUS_MASK,),
    0x03: (),
    0x04: (DTC_STATUS_MASK, DTC_SNAPSHOT_RECORD_NUMBER),
    0x05: (DTC_STORED_DATA_RECORD_NUMBER,),
    0x06: (DTC, DTC_EXTENDED_DATA_RECORD_NUMBER),
    0x07: (DTC_SEVERITY_MASK, DTC_STATUS_MASK),
    0x08: (DTC_SEVERITY_MASK, DTC_STATUS_MASK),
    0x09: (DTC,),
    0x0A: (),
    0x0B: (),
    0x0C: (),
    0x0D: (),
    0x0E: (),
    0x0F: (DTC_STATUS_MASK,),
    0x10: (DTC, DTC_EXTENDED_DATA_RECORD_NUMBER),
    0x11: (DTC_STATUS_MASK,),
    0x12: (DTC_STATUS_MASK,),
    0x13: (DTC_STATUS_MASK,),
    0x14: (),
    0x15: (),
    0x16: (DTC_EXTENDED_DATA_RECORD_NUMBER,),
    0x17: (DTC_STATUS_MASK, MEMORY_SELECTION),
    0x18: (DTC, DTC_SNAPSHOT_RECORD_NUMBER, MEMORY_SELECTION),
    0x19: (DTC, DTC_EXTENDED_DATA_RECORD_NUMBER, MEMORY_SELECTION),
    0x42: (DTC_FUNCTIONAL_GROUP_IDENTIFIER, DTC_STATUS_MASK, DTC_SEVERITY_MASK),
    0x55: (DTC_FUNCTIONAL_GROUP_IDENTIFIER,),
}
REQUEST_CONTINUATION_MAPPING_2020 = {
    0x01: (DTC_STATUS_MASK,),
    0x02: (DTC_STATUS_MASK,),
    0x03: (),
    0x04: (DTC_STATUS_MASK, DTC_SNAPSHOT_RECORD_NUMBER),
    0x05: (DTC_STORED_DATA_RECORD_NUMBER,),
    0x06: (DTC, DTC_EXTENDED_DATA_RECORD_NUMBER),
    0x07: (DTC_SEVERITY_MASK, DTC_STATUS_MASK),
    0x08: (DTC_SEVERITY_MASK, DTC_STATUS_MASK),
    0x09: (DTC,),
    0x0A: (),
    0x0B: (),
    0x0C: (),
    0x0D: (),
    0x0E: (),
    0x14: (),
    0x15: (),
    0x16: (DTC_EXTENDED_DATA_RECORD_NUMBER,),
    0x17: (DTC_STATUS_MASK, MEMORY_SELECTION),
    0x18: (DTC, DTC_SNAPSHOT_RECORD_NUMBER, MEMORY_SELECTION),
    0x19: (DTC, DTC_EXTENDED_DATA_RECORD_NUMBER, MEMORY_SELECTION),
    0x1A: (DTC_EXTENDED_DATA_RECORD_NUMBER,),
    0x42: (DTC_FUNCTIONAL_GROUP_IDENTIFIER, DTC_STATUS_MASK, DTC_SEVERITY_MASK),
    0x55: (DTC_FUNCTIONAL_GROUP_IDENTIFIER,),
    0x56: (DTC_FUNCTIONAL_GROUP_IDENTIFIER, DTC_READINESS_GROUP_IDENTIFIER),
}

RESPONSE_CONTINUATION_MAPPING_2013 = {
    0x01: (DTC_STATUS_AVAILABILITY_MASK, DTC_FORMAT_IDENTIFIER, DTC_COUNT),
    0x02: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    0x03: (MULTIPLE_DTC_AND_SNAPSHOT_RECORD_NUMBER_RECORDS,),
    # TODO: reportDTCSnapshotRecordByDTCNumber (0x04) - DIDs management
    # TODO: reportDTCSnapshotRecordByDTCNumber (0x05) - DIDs management
    # TODO: reportDTCExtDataRecordByDTCNumber (0x06) - DTCExtDataRecords management
    0x06: (DTC, DTC_STATUS, ),  #TODO: add extended data records
    0x07: (DTC_STATUS_AVAILABILITY_MASK, DTC_FORMAT_IDENTIFIER, DTC_COUNT),
    0x08: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_SEVERITY_FUNCTIONAL_UNIT_STATUS_RECORDS),
    0x09: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_SEVERITY_FUNCTIONAL_UNIT_STATUS_RECORDS),
    0x0A: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    0x0B: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_STATUS_RECORD),
    0x0C: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_STATUS_RECORD),
    0x0D: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_STATUS_RECORD),
    0x0E: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_STATUS_RECORD),
    0x0F: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    # TODO: reportMirrorMemoryDTCExtDataRecordByDTCNumber (0x10) - DTCExtDataRecords management
    0x11: (DTC_STATUS_AVAILABILITY_MASK, DTC_FORMAT_IDENTIFIER, DTC_COUNT),
    0x12: (DTC_STATUS_AVAILABILITY_MASK, DTC_FORMAT_IDENTIFIER, DTC_COUNT),
    0x13: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    0x14: (MULTIPLE_DTC_AND_FAULT_DETECTION_COUNTERS,),
    0x15: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    # TODO: reportDTCExtDataRecordByDTCNumber (0x16) - DTCExtDataRecords management
    0x17: (MEMORY_SELECTION, DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    # TODO: reportDTCSnapshotRecordByDTCNumber (0x18) - DIDs management
    # TODO: reportDTCExtDataRecordByDTCNumber (0x19) - DTCExtDataRecords management
    0x42: (DTC_FUNCTIONAL_GROUP_IDENTIFIER, DTC_STATUS_AVAILABILITY_MASK, DTC_SEVERITY_MASK, DTC_FORMAT_IDENTIFIER,
           MULTIPLE_DTC_AND_SEVERITY_STATUS_RECORDS),
    0x55: (DTC_FUNCTIONAL_GROUP_IDENTIFIER, DTC_STATUS_AVAILABILITY_MASK, DTC_FORMAT_IDENTIFIER,
           MULTIPLE_DTC_AND_STATUS_RECORDS),
}
RESPONSE_CONTINUATION_MAPPING_2020 = {
    0x01: (DTC_STATUS_AVAILABILITY_MASK, DTC_FORMAT_IDENTIFIER, DTC_COUNT),
    0x02: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    0x03: (MULTIPLE_DTC_AND_SNAPSHOT_RECORD_NUMBER_RECORDS,),
    # TODO: reportDTCSnapshotRecordByDTCNumber (0x04) - DIDs management
    # TODO: reportDTCSnapshotRecordByDTCNumber (0x05) - DIDs management
    # TODO: reportDTCExtDataRecordByDTCNumber (0x06) - DTCExtDataRecords management
    0x07: (DTC_STATUS_AVAILABILITY_MASK, DTC_FORMAT_IDENTIFIER, DTC_COUNT),
    0x08: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_SEVERITY_FUNCTIONAL_UNIT_STATUS_RECORDS),
    0x09: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_SEVERITY_FUNCTIONAL_UNIT_STATUS_RECORDS),
    0x0A: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    0x0B: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_STATUS_RECORD),
    0x0C: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_STATUS_RECORD),
    0x0D: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_STATUS_RECORD),
    0x0E: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_AND_STATUS_RECORD),
    0x14: (MULTIPLE_DTC_AND_FAULT_DETECTION_COUNTERS,),
    0x15: (DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    # TODO: reportDTCExtDataRecordByDTCNumber (0x16) - DTCExtDataRecords management
    0x17: (MEMORY_SELECTION, DTC_STATUS_AVAILABILITY_MASK, MULTIPLE_DTC_AND_STATUS_RECORDS),
    # TODO: reportDTCSnapshotRecordByDTCNumber (0x18) - DIDs management
    # TODO: reportDTCExtDataRecordByDTCNumber (0x19) - DTCExtDataRecords management
    0x1A: (DTC_STATUS_AVAILABILITY_MASK, OPTIONAL_DTC_EXTENDED_DATA_RECORD_NUMBER, MULTIPLE_DTC_AND_STATUS_RECORDS),
    0x42: (DTC_FUNCTIONAL_GROUP_IDENTIFIER, DTC_STATUS_AVAILABILITY_MASK, DTC_SEVERITY_MASK, DTC_FORMAT_IDENTIFIER,
           MULTIPLE_DTC_AND_SEVERITY_STATUS_RECORDS),
    0x55: (DTC_FUNCTIONAL_GROUP_IDENTIFIER, DTC_STATUS_AVAILABILITY_MASK, DTC_FORMAT_IDENTIFIER,
           MULTIPLE_DTC_AND_STATUS_RECORDS),
    0x56: (DTC_FUNCTIONAL_GROUP_IDENTIFIER, DTC_STATUS_AVAILABILITY_MASK, DTC_FORMAT_IDENTIFIER,
           DTC_READINESS_GROUP_IDENTIFIER, MULTIPLE_DTC_AND_STATUS_RECORDS)
}

CONDITIONAL_REQUEST_CONTINUATION_2013 = ConditionalMappingDataRecord(
    mapping=REQUEST_CONTINUATION_MAPPING_2013
            | {key+0x80: value for key, value in REQUEST_CONTINUATION_MAPPING_2013.items()})
CONDITIONAL_REQUEST_CONTINUATION_2020 = ConditionalMappingDataRecord(
    mapping=REQUEST_CONTINUATION_MAPPING_2020
            | {key+0x80: value for key, value in REQUEST_CONTINUATION_MAPPING_2020.items()})

CONDITIONAL_RESPONSE_CONTINUATION_2013 = ConditionalMappingDataRecord(
    mapping=RESPONSE_CONTINUATION_MAPPING_2013
            | {key+0x80: value for key, value in RESPONSE_CONTINUATION_MAPPING_2013.items()})
CONDITIONAL_RESPONSE_CONTINUATION_2020 = ConditionalMappingDataRecord(
    mapping=RESPONSE_CONTINUATION_MAPPING_2020
            | {key+0x80: value for key, value in RESPONSE_CONTINUATION_MAPPING_2020.items()})

READ_DTC_INFORMATION_2013 = Service(request_sid=RequestSID.ReadDTCInformation,
                                    request_structure=(READ_DTC_INFORMATION_SUB_FUNCTION_2013,
                                                       CONDITIONAL_REQUEST_CONTINUATION_2013),
                                    response_structure=[READ_DTC_INFORMATION_SUB_FUNCTION_2013,
                                                        CONDITIONAL_RESPONSE_CONTINUATION_2013])
"""Translator for :ref:`ReadDTCInformation <knowledge-base-service-read-dtc-information>` service compatible with 
ISO 14229-1:2013."""

READ_DTC_INFORMATION_2020 = Service(request_sid=RequestSID.ReadDTCInformation,
                                    request_structure=(READ_DTC_INFORMATION_SUB_FUNCTION_2020,
                                                       CONDITIONAL_REQUEST_CONTINUATION_2020),
                                    response_structure=[READ_DTC_INFORMATION_SUB_FUNCTION_2020,
                                                        CONDITIONAL_RESPONSE_CONTINUATION_2020])
"""Translator for :ref:`ReadDTCInformation <knowledge-base-service-read-dtc-information>` service compatible with 
ISO 14229-1:2020."""

READ_DTC_INFORMATION = READ_DTC_INFORMATION_2020
"""Default translator for :ref:`ReadDTCInformation <knowledge-base-service-read-dtc-information>` service."""
